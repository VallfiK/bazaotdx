// internal/app/styled_app.go
package app

import (
	"fmt"
	"strconv"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/dialog"
	"fyne.io/fyne/v2/widget"
)

// showReportsDialog –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –æ—Ç—á–µ—Ç–∞–º–∏
func (a *StyledGuestApp) showReportsDialog() {
	content := container.NewVBox(
		widget.NewCard("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç—á–µ—Ç—ã", "", container.NewVBox(
			widget.NewButton("üìà –û—Ç—á–µ—Ç –æ –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏", func() {
				dialog.ShowInformation("üîß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏", a.window)
			}),
			widget.NewButton("üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç", func() {
				dialog.ShowInformation("üîß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏", a.window)
			}),
			widget.NewButton("üìã –û—Ç—á–µ—Ç –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º", func() {
				dialog.ShowInformation("üîß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏", a.window)
			}),
		)),
	)

	d := dialog.NewCustom("üìä –û—Ç—á–µ—Ç—ã", "–ó–∞–∫—Ä—ã—Ç—å", content, a.window)
	d.Resize(fyne.NewSize(400, 300))
	d.Show()
}

// showCottagesDialog –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–∏–∫–∞–º–∏
func (a *StyledGuestApp) showCottagesDialog() {
	// –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–∏–∫–æ–≤
	cottages, _ := a.cottageService.GetAllCottages()

	list := widget.NewList(
		func() int { return len(cottages) },
		func() fyne.CanvasObject {
			return container.NewHBox(
				widget.NewLabel("–î–æ–º–∏–∫"),
				widget.NewLabel("–°—Ç–∞—Ç—É—Å"),
				widget.NewButton("–ò–∑–º–µ–Ω–∏—Ç—å", nil),
			)
		},
		func(id widget.ListItemID, item fyne.CanvasObject) {
			cottage := cottages[id]
			box := item.(*fyne.Container)

			box.Objects[0].(*widget.Label).SetText(fmt.Sprintf("üè† %d. %s", cottage.ID, cottage.Name))

			status := "üü¢ –°–≤–æ–±–æ–¥–µ–Ω"
			if cottage.Status == "occupied" {
				status = "üî¥ –ó–∞–Ω—è—Ç"
			}
			box.Objects[1].(*widget.Label).SetText(status)

			box.Objects[2].(*widget.Button).OnTapped = func() {
				a.showEditCottageDialog(cottage)
			}
		},
	)

	// –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
	nameEntry := widget.NewEntry()
	nameEntry.SetPlaceHolder("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–º–∏–∫–∞")
	nameEntry.Resize(fyne.NewSize(200, 40))

	addBtn := widget.NewButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∏–∫", func() {
		if nameEntry.Text == "" {
			dialog.ShowError(fmt.Errorf("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"), a.window)
			return
		}

		err := a.cottageService.AddCottage(nameEntry.Text)
		if err != nil {
			dialog.ShowError(err, a.window)
			return
		}

		dialog.ShowInformation("‚úÖ –£—Å–ø–µ—à–Ω–æ", "–î–æ–º–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω", a.window)
		cottages, _ = a.cottageService.GetAllCottages()
		list.Refresh()
		a.calendarWidget.Update()
		nameEntry.SetText("")
	})

	content := container.NewBorder(
		widget.NewCard("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∏–∫", "",
			container.NewBorder(nil, nil, nil, addBtn, nameEntry),
		),
		nil, nil, nil,
		list,
	)

	d := dialog.NewCustom("üè† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∏–∫–∞–º–∏", "–ó–∞–∫—Ä—ã—Ç—å", content, a.window)
	d.Resize(fyne.NewSize(600, 500))
	d.Show()
}

// showTariffsDialog –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞–º–∏
func (a *StyledGuestApp) showTariffsDialog() {
	tariffs, _ := a.tariffService.GetTariffs()

	list := widget.NewList(
		func() int { return len(tariffs) },
		func() fyne.CanvasObject {
			return container.NewHBox(
				widget.NewLabel("–¢–∞—Ä–∏—Ñ"),
				widget.NewLabel("–¶–µ–Ω–∞"),
				widget.NewButton("–ò–∑–º–µ–Ω–∏—Ç—å", nil),
			)
		},
		func(id widget.ListItemID, item fyne.CanvasObject) {
			tariff := tariffs[id]
			box := item.(*fyne.Container)

			box.Objects[0].(*widget.Label).SetText(fmt.Sprintf("üí∞ %s", tariff.Name))
			box.Objects[1].(*widget.Label).SetText(fmt.Sprintf("%.0f ‚ÇΩ/—Å—É—Ç–∫–∏", tariff.PricePerDay))

			box.Objects[2].(*widget.Button).OnTapped = func() {
				a.showEditTariffDialog(tariff)
			}
		},
	)

	// –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
	nameEntry := widget.NewEntry()
	nameEntry.SetPlaceHolder("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞")

	priceEntry := widget.NewEntry()
	priceEntry.SetPlaceHolder("–¶–µ–Ω–∞ –∑–∞ —Å—É—Ç–∫–∏")

	addBtn := widget.NewButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ", func() {
		if nameEntry.Text == "" || priceEntry.Text == "" {
			dialog.ShowError(fmt.Errorf("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è"), a.window)
			return
		}

		price, err := strconv.ParseFloat(priceEntry.Text, 64)
		if err != nil {
			dialog.ShowError(fmt.Errorf("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã"), a.window)
			return
		}

		err = a.tariffService.CreateTariff(nameEntry.Text, price)
		if err != nil {
			dialog.ShowError(err, a.window)
			return
		}

		dialog.ShowInformation("‚úÖ –£—Å–ø–µ—à–Ω–æ", "–¢–∞—Ä–∏—Ñ –¥–æ–±–∞–≤–ª–µ–Ω", a.window)
		tariffs, _ = a.tariffService.GetTariffs()
		list.Refresh()
		nameEntry.SetText("")
		priceEntry.SetText("")
	})

	content := container.NewBorder(
		widget.NewCard("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ", "",
			container.NewVBox(
				nameEntry,
				priceEntry,
				addBtn,
			),
		),
		nil, nil, nil,
		list,
	)

	d := dialog.NewCustom("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏", "–ó–∞–∫—Ä—ã—Ç—å", content, a.window)
	d.Resize(fyne.NewSize(500, 500))
	d.Show()
}
